/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tradingapp;

import communication.IBCommunication;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.FileHandler;
import java.util.logging.Handler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import strategies.Ninety;
import tradingapp.Timing.MyTask;
import data.GoogleActDataGetter;
import data.IndicatorCalculator;
import data.YahooDataGetter;
import java.io.PrintStream;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.Calendar;

/**
 *
 * @author Muhe
 */
public class MainWindow extends javax.swing.JFrame {

    private final static Logger logger = Logger.getLogger( Logger.GLOBAL_LOGGER_NAME );
    
    private final IBCommunication m_comm;
    
    Ninety nine = new Ninety();
    private boolean m_connected = false;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
         
        try {
            logger.setLevel(Level.INFO);
            
            FileHandler fileTxt = new FileHandler("Logging.txt");
            TextAreaLogHandler textHandler = new TextAreaLogHandler(logArea);
            
            // create a TXT formatter
            SimpleFormatter formatterTxt = new SimpleFormatter();
            fileTxt.setFormatter(formatterTxt);
            
            logger.addHandler(fileTxt);
            logger.addHandler(textHandler);
            
        } catch (IOException e) {
            throw new RuntimeException("Problems with creating the log files");
        }
        
        m_comm = new IBCommunication();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        logScrollPane = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        readYahooButton = new javax.swing.JButton();
        readGoogleButton = new javax.swing.JButton();
        indCalcButton = new javax.swing.JButton();
        tickSymbolTextField = new javax.swing.JTextField();
        comp90Button = new javax.swing.JButton();
        connectButton = new javax.swing.JButton();
        portTextField = new javax.swing.JTextField();
        buyButton = new javax.swing.JButton();
        sellButton = new javax.swing.JButton();
        loadStatusButton = new javax.swing.JButton();
        buyStatusButton = new javax.swing.JButton();
        SellAllButton = new javax.swing.JButton();
        saveStatusButton = new javax.swing.JButton();
        LoadStatusFileButton = new javax.swing.JButton();
        printStatusButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(300, 300));

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        logArea.setEditable(false);
        logArea.setColumns(20);
        logArea.setRows(5);
        logScrollPane.setViewportView(logArea);

        readYahooButton.setText("ReadYahoo");
        readYahooButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readYahooButtonActionPerformed(evt);
            }
        });

        readGoogleButton.setText("ReadGoogle");
        readGoogleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readGoogleButtonActionPerformed(evt);
            }
        });

        indCalcButton.setText("IndCalc");
        indCalcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indCalcButtonActionPerformed(evt);
            }
        });

        tickSymbolTextField.setText("AAPL");
        tickSymbolTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tickSymbolTextFieldActionPerformed(evt);
            }
        });

        comp90Button.setText("Compute 90");
        comp90Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp90ButtonActionPerformed(evt);
            }
        });

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        portTextField.setText("4001");
        portTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portTextFieldActionPerformed(evt);
            }
        });

        buyButton.setText("Buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        sellButton.setText("Sell");
        sellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellButtonActionPerformed(evt);
            }
        });

        loadStatusButton.setText("LoadStatus");
        loadStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadStatusButtonActionPerformed(evt);
            }
        });

        buyStatusButton.setText("BuyStatus");
        buyStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyStatusButtonActionPerformed(evt);
            }
        });

        SellAllButton.setText("SellAllPositions");
        SellAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellAllButtonActionPerformed(evt);
            }
        });

        saveStatusButton.setText("SaveStatus");
        saveStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStatusButtonActionPerformed(evt);
            }
        });

        LoadStatusFileButton.setText("LoadStatusFromFile");
        LoadStatusFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadStatusFileButtonActionPerformed(evt);
            }
        });

        printStatusButton.setText("PrintStatus");
        printStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printStatusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tickSymbolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buyButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sellButton)
                                .addGap(44, 44, 44)
                                .addComponent(connectButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comp90Button)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(readYahooButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(readGoogleButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(indCalcButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(loadStatusButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buyStatusButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SellAllButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveStatusButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LoadStatusFileButton))
                            .addComponent(printStatusButton))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(tickSymbolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectButton)
                    .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadStatusButton)
                    .addComponent(buyStatusButton)
                    .addComponent(SellAllButton)
                    .addComponent(buyButton)
                    .addComponent(sellButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(readYahooButton)
                    .addComponent(readGoogleButton)
                    .addComponent(indCalcButton)
                    .addComponent(saveStatusButton)
                    .addComponent(LoadStatusFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comp90Button)
                    .addComponent(printStatusButton))
                .addGap(18, 18, 18)
                .addComponent(logScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        Timing t= new Timing(new Runnable() {
            @Override
            public void run() {
                comp90ButtonActionPerformed(null);
            }
        });
        t.startExecutionAt(15, 59, 00);
        logger.info( "Start in 15:59:00 US time." );
        
    }//GEN-LAST:event_startButtonActionPerformed

    private void readYahooButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readYahooButtonActionPerformed
        try {
            GoogleActDataGetter goog = new GoogleActDataGetter();
            double value = goog.readActualData(tickSymbolTextField.getText());
            YahooDataGetter yah = new YahooDataGetter();
            yah.readData(new Date(), 14, tickSymbolTextField.getText(), value);
            
            for (int i = 0; i < 14; i++) {
                Date date = yah.data.date[i];
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                logArea.append( formatter.format(date) );
                logArea.append( " AdjClose: " );
                logArea.append( Double.toString(yah.data.adjClose[i]) );
                logArea.append( "\r\n" );
            }
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_readYahooButtonActionPerformed

    private void readGoogleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readGoogleButtonActionPerformed
        try {
            GoogleActDataGetter goog = new GoogleActDataGetter();
            double value = goog.readActualData(tickSymbolTextField.getText());
            
            logger.info(Double.toString(value));
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_readGoogleButtonActionPerformed

    private void indCalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indCalcButtonActionPerformed
        try {
            YahooDataGetter yah = new YahooDataGetter();
            GoogleActDataGetter goog = new GoogleActDataGetter();
            double value = goog.readActualData(tickSymbolTextField.getText());
            yah.readData(new Date(), 200, tickSymbolTextField.getText(), value);
            
            IndicatorCalculator ind = new IndicatorCalculator();
            double sma5 = ind.SMA(5, yah.data.adjClose);
            double sma200 = ind.SMA(200, yah.data.adjClose);
            double rsi = ind.RSI(yah.data.adjClose);
            
            logger.log(Level.INFO, "SMA5: " + Double.toString(sma5));
            logger.log(Level.INFO, "SMA200: " + Double.toString(sma200));
            logger.log(Level.INFO, "RSI2: " + Double.toString(rsi));
            
            double[] forRSI = {122.15, 121.48, 122.06,
                120.73, 120.87, 120.26, 119.47,
                118.38, 118.64, 118.83, 117.54,
                117.78, 117.09, 116.85};
            double[] forRSIrev = new double[forRSI.length];
            
            for (int i = 0; i < forRSIrev.length; i++) {
                forRSIrev[forRSIrev.length - 1 - i] = forRSI[i];
            }
            
            double rsi2 = ind.RSI(forRSIrev);
            logger.log(Level.INFO, "RSI TEST: " + Double.toString(rsi2));
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_indCalcButtonActionPerformed

    private void tickSymbolTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tickSymbolTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tickSymbolTextFieldActionPerformed

    private void comp90ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comp90ButtonActionPerformed
        try {
            
            LocalDate date = LocalDate.now();
            DayOfWeek dow = date.getDayOfWeek();

            logger.info("It's " + dow + "!");

            if (dow == DayOfWeek.SATURDAY || dow == DayOfWeek.SUNDAY) {
                logger.info("Nothing to trade during weekend");

                nine.PrintStatus();

                try {
                    Thread.sleep(5000);
                } catch (InterruptedException ex) {
                    Thread.currentThread().interrupt();
                }

                startButtonActionPerformed(null);
                return;
            }

            logger.info("Let's start trading.");

            nine.PrintStatus();

            if (!m_connected) {
                nine.Connect(Integer.parseInt(portTextField.getText()));
                m_connected = true;
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException ex) {
                    Thread.currentThread().interrupt();
                }
            }

            nine.RunStrategy();

            try {
                Thread.sleep(5000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }

            logger.info("Trading is finished.");

            nine.PrintStatus();

            startButtonActionPerformed(null);
        
        } catch (Exception e) {
            //logger.severe("Exception in Ninety: " + e.getMessage());
            logger.log(Level.SEVERE, e.getMessage(), e);
            //e.printStackTrace(new PrintStream(logger.));
            
        }
    }//GEN-LAST:event_comp90ButtonActionPerformed

    private void portTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portTextFieldActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        nine.Connect(Integer.parseInt(portTextField.getText()));
        m_connected = true;
    }//GEN-LAST:event_connectButtonActionPerformed

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        TradeOrder order = new TradeOrder();
        order.orderType = TradeOrder.OrderType.BUY;
        order.tickerSymbol = tickSymbolTextField.getText();
        
        m_comm.PlaceOrder(order);
    }//GEN-LAST:event_buyButtonActionPerformed

    private void sellButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellButtonActionPerformed
        TradeOrder order = new TradeOrder();
        order.orderType = TradeOrder.OrderType.SELL;
        order.tickerSymbol = tickSymbolTextField.getText();
        
        m_comm.PlaceOrder(order);
    }//GEN-LAST:event_sellButtonActionPerformed

    private void loadStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadStatusButtonActionPerformed
        nine.LoadStatus();
        nine.PrintStatus();
    }//GEN-LAST:event_loadStatusButtonActionPerformed

    private void buyStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyStatusButtonActionPerformed
        if (!m_connected) {
            nine.Connect(Integer.parseInt(portTextField.getText()));
            m_connected = true;
            try {
                Thread.sleep(5000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
        }
        nine.BuyLoadedStatus();
    }//GEN-LAST:event_buyStatusButtonActionPerformed

    private void SellAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellAllButtonActionPerformed
        if (!m_connected) {
            nine.Connect(Integer.parseInt(portTextField.getText()));
            m_connected = true;
            try {
                Thread.sleep(5000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
        }
        nine.SellAllPositions();
    }//GEN-LAST:event_SellAllButtonActionPerformed

    private void saveStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStatusButtonActionPerformed
        nine.SaveHeldPositionsToFile();
        logger.info("Status saved.");
    }//GEN-LAST:event_saveStatusButtonActionPerformed

    private void LoadStatusFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadStatusFileButtonActionPerformed
        nine.ReadHeldPositions();
        nine.PrintStatus();
    }//GEN-LAST:event_LoadStatusFileButtonActionPerformed

    private void printStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printStatusButtonActionPerformed
        nine.PrintStatus();
    }//GEN-LAST:event_printStatusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoadStatusFileButton;
    private javax.swing.JButton SellAllButton;
    private javax.swing.JButton buyButton;
    private javax.swing.JButton buyStatusButton;
    private javax.swing.JButton comp90Button;
    private javax.swing.JButton connectButton;
    private javax.swing.JButton indCalcButton;
    private javax.swing.JButton loadStatusButton;
    private javax.swing.JTextArea logArea;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton printStatusButton;
    private javax.swing.JButton readGoogleButton;
    private javax.swing.JButton readYahooButton;
    private javax.swing.JButton saveStatusButton;
    private javax.swing.JButton sellButton;
    private javax.swing.JButton startButton;
    private javax.swing.JTextField tickSymbolTextField;
    // End of variables declaration//GEN-END:variables
}
